# Задача 49: Планеты вращаются вокруг звезд по эллиптическим орбитам.
# Назовем самой далекой планетой ту, орбита которой имеет
# самую большую площадь. Напишите функцию
# find_farthest_orbit(list_of_orbits), которая среди списка орбит
# планет найдет ту, по которой вращается самая далекая
# планета. Круговые орбиты не учитывайте: вы знаете, что у
# вашей звезды таких планет нет, зато искусственные спутники
# были были запущены на круговые орбиты. Результатом
# функции должен быть кортеж, содержащий длины полуосей
# эллипса орбиты самой далекой планеты. Каждая орбита
# представляет из себя кортеж из пары чисел - полуосей ее
# эллипса. Площадь эллипса вычисляется по формуле S = pi*a*b,
# где a и b - длины полуосей эллипса. При решении задачи
# используйте списочные выражения. Подсказка: проще всего
# будет найти эллипс в два шага: сначала вычислить самую
# большую площадь эллипса, а затем найти и сам эллипс,
# имеющий такую площадь. Гарантируется, что самая далекая
# планета ровно одна

# from math import pi
# from random import randint
#
#
# def find_farthest_orbit(list_of_orbits: list):
#     dict_ = {round(pi * orbit[0] * orbit[1], 2): orbit for orbit in
#              filter(lambda orbit: orbit[0] != orbit[1], list_of_orbits)}
#
#     return f"{max(dict_.keys())} = {dict_[max(dict_)]}"
#
#
# quantity = int(input("Введите количество планет: "))
# orbits = [(randint(1, 10), randint(1, 10)) for i in range(quantity)]
# print(orbits)
# print(find_farthest_orbit(orbits))


# Задача 51: Напишите функцию same_by(characteristic, objects), которая
# проверяет, все ли объекты имеют одинаковое значение
# некоторой характеристики, и возвращают True, если это так.
# Если значение характеристики для разных объектов
# отличается - то False. Для пустого набора объектов, функция
# должна возвращать True. Аргумент characteristic - это
# функция, которая принимает объект и вычисляет его
# характеристику


from random import randint


def same_by(characteristic, objects):
    my_set = set(map(characteristic, objects))
    return len(my_set) < 2


list_obj = [randint(1, 10) for i in range(5)]

print(same_by(lambda x: x > 2, list_obj))
